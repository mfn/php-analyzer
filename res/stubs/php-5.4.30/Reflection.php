<?php
# Generated by mfn/php-reflection-gen 0.0.1
# PHP version 5.4.30, extension Reflection $Id: f6367cdb4e3f392af4a6d441a6641de87c2e50c4 $
class ReflectionException extends Exception{
  final private function __clone() {}
  public function __construct($message, $code, $previous) {}
  final public function getMessage() {}
  final public function getCode() {}
  final public function getFile() {}
  final public function getLine() {}
  final public function getTrace() {}
  final public function getPrevious() {}
  final public function getTraceAsString() {}
  public function __toString() {}
}
class Reflection{
  static public function getModifierNames($modifiers) {}
  static public function export(Reflector $reflector, $return) {}
}
abstract class ReflectionFunctionAbstract implements Reflector{
  final private function __clone() {}
  abstract public function __toString() {}
  public function inNamespace() {}
  public function isClosure() {}
  public function isDeprecated() {}
  public function isInternal() {}
  public function isUserDefined() {}
  public function getClosureThis() {}
  public function getClosureScopeClass() {}
  public function getDocComment() {}
  public function getEndLine() {}
  public function getExtension() {}
  public function getExtensionName() {}
  public function getFileName() {}
  public function getName() {}
  public function getNamespaceName() {}
  public function getNumberOfParameters() {}
  public function getNumberOfRequiredParameters() {}
  public function getParameters() {}
  public function getShortName() {}
  public function getStartLine() {}
  public function getStaticVariables() {}
  public function returnsReference() {}
}
class ReflectionFunction extends ReflectionFunctionAbstract implements Reflector{
  public function __construct($name) {}
  public function __toString() {}
  static public function export($name, $return) {}
  public function isDisabled() {}
  public function invoke($args) {}
  public function invokeArgs(array $args) {}
  public function getClosure() {}
  final private function __clone() {}
  public function inNamespace() {}
  public function isClosure() {}
  public function isDeprecated() {}
  public function isInternal() {}
  public function isUserDefined() {}
  public function getClosureThis() {}
  public function getClosureScopeClass() {}
  public function getDocComment() {}
  public function getEndLine() {}
  public function getExtension() {}
  public function getExtensionName() {}
  public function getFileName() {}
  public function getName() {}
  public function getNamespaceName() {}
  public function getNumberOfParameters() {}
  public function getNumberOfRequiredParameters() {}
  public function getParameters() {}
  public function getShortName() {}
  public function getStartLine() {}
  public function getStaticVariables() {}
  public function returnsReference() {}
}
class ReflectionParameter implements Reflector{
  final private function __clone() {}
  static public function export($function, $parameter, $return) {}
  public function __construct($function, $parameter) {}
  public function __toString() {}
  public function getName() {}
  public function isPassedByReference() {}
  public function canBePassedByValue() {}
  public function getDeclaringFunction() {}
  public function getDeclaringClass() {}
  public function getClass() {}
  public function isArray() {}
  public function isCallable() {}
  public function allowsNull() {}
  public function getPosition() {}
  public function isOptional() {}
  public function isDefaultValueAvailable() {}
  public function getDefaultValue() {}
  public function isDefaultValueConstant() {}
  public function getDefaultValueConstantName() {}
}
class ReflectionMethod extends ReflectionFunctionAbstract implements Reflector{
  static public function export($class, $name, $return) {}
  public function __construct($class_or_method, $name) {}
  public function __toString() {}
  public function isPublic() {}
  public function isPrivate() {}
  public function isProtected() {}
  public function isAbstract() {}
  public function isFinal() {}
  public function isStatic() {}
  public function isConstructor() {}
  public function isDestructor() {}
  public function getClosure($object) {}
  public function getModifiers() {}
  public function invoke($object, $args) {}
  public function invokeArgs($object, array $args) {}
  public function getDeclaringClass() {}
  public function getPrototype() {}
  public function setAccessible($value) {}
  final private function __clone() {}
  public function inNamespace() {}
  public function isClosure() {}
  public function isDeprecated() {}
  public function isInternal() {}
  public function isUserDefined() {}
  public function getClosureThis() {}
  public function getClosureScopeClass() {}
  public function getDocComment() {}
  public function getEndLine() {}
  public function getExtension() {}
  public function getExtensionName() {}
  public function getFileName() {}
  public function getName() {}
  public function getNamespaceName() {}
  public function getNumberOfParameters() {}
  public function getNumberOfRequiredParameters() {}
  public function getParameters() {}
  public function getShortName() {}
  public function getStartLine() {}
  public function getStaticVariables() {}
  public function returnsReference() {}
}
class ReflectionClass implements Reflector{
  final private function __clone() {}
  static public function export($argument, $return) {}
  public function __construct($argument) {}
  public function __toString() {}
  public function getName() {}
  public function isInternal() {}
  public function isUserDefined() {}
  public function isInstantiable() {}
  public function isCloneable() {}
  public function getFileName() {}
  public function getStartLine() {}
  public function getEndLine() {}
  public function getDocComment() {}
  public function getConstructor() {}
  public function hasMethod($name) {}
  public function getMethod($name) {}
  public function getMethods($filter) {}
  public function hasProperty($name) {}
  public function getProperty($name) {}
  public function getProperties($filter) {}
  public function hasConstant($name) {}
  public function getConstants() {}
  public function getConstant($name) {}
  public function getInterfaces() {}
  public function getInterfaceNames() {}
  public function isInterface() {}
  public function getTraits() {}
  public function getTraitNames() {}
  public function getTraitAliases() {}
  public function isTrait() {}
  public function isAbstract() {}
  public function isFinal() {}
  public function getModifiers() {}
  public function isInstance($object) {}
  public function newInstance($args) {}
  public function newInstanceWithoutConstructor() {}
  public function newInstanceArgs(array $args) {}
  public function getParentClass() {}
  public function isSubclassOf($class) {}
  public function getStaticProperties() {}
  public function getStaticPropertyValue($name, $default) {}
  public function setStaticPropertyValue($name, $value) {}
  public function getDefaultProperties() {}
  public function isIterateable() {}
  public function implementsInterface($interface) {}
  public function getExtension() {}
  public function getExtensionName() {}
  public function inNamespace() {}
  public function getNamespaceName() {}
  public function getShortName() {}
}
class ReflectionObject extends ReflectionClass implements Reflector{
  static public function export($argument, $return) {}
  public function __construct($argument) {}
  final private function __clone() {}
  public function __toString() {}
  public function getName() {}
  public function isInternal() {}
  public function isUserDefined() {}
  public function isInstantiable() {}
  public function isCloneable() {}
  public function getFileName() {}
  public function getStartLine() {}
  public function getEndLine() {}
  public function getDocComment() {}
  public function getConstructor() {}
  public function hasMethod($name) {}
  public function getMethod($name) {}
  public function getMethods($filter) {}
  public function hasProperty($name) {}
  public function getProperty($name) {}
  public function getProperties($filter) {}
  public function hasConstant($name) {}
  public function getConstants() {}
  public function getConstant($name) {}
  public function getInterfaces() {}
  public function getInterfaceNames() {}
  public function isInterface() {}
  public function getTraits() {}
  public function getTraitNames() {}
  public function getTraitAliases() {}
  public function isTrait() {}
  public function isAbstract() {}
  public function isFinal() {}
  public function getModifiers() {}
  public function isInstance($object) {}
  public function newInstance($args) {}
  public function newInstanceWithoutConstructor() {}
  public function newInstanceArgs(array $args) {}
  public function getParentClass() {}
  public function isSubclassOf($class) {}
  public function getStaticProperties() {}
  public function getStaticPropertyValue($name, $default) {}
  public function setStaticPropertyValue($name, $value) {}
  public function getDefaultProperties() {}
  public function isIterateable() {}
  public function implementsInterface($interface) {}
  public function getExtension() {}
  public function getExtensionName() {}
  public function inNamespace() {}
  public function getNamespaceName() {}
  public function getShortName() {}
}
class ReflectionProperty implements Reflector{
  final private function __clone() {}
  static public function export($class, $name, $return) {}
  public function __construct($class, $name) {}
  public function __toString() {}
  public function getName() {}
  public function getValue($object) {}
  public function setValue($object, $value) {}
  public function isPublic() {}
  public function isPrivate() {}
  public function isProtected() {}
  public function isStatic() {}
  public function isDefault() {}
  public function getModifiers() {}
  public function getDeclaringClass() {}
  public function getDocComment() {}
  public function setAccessible($visible) {}
}
class ReflectionExtension implements Reflector{
  final private function __clone() {}
  static public function export($name, $return) {}
  public function __construct($name) {}
  public function __toString() {}
  public function getName() {}
  public function getVersion() {}
  public function getFunctions() {}
  public function getConstants() {}
  public function getINIEntries() {}
  public function getClasses() {}
  public function getClassNames() {}
  public function getDependencies() {}
  public function info() {}
  public function isPersistent() {}
  public function isTemporary() {}
}
class ReflectionZendExtension implements Reflector{
  final private function __clone() {}
  static public function export($name, $return) {}
  public function __construct($name) {}
  public function __toString() {}
  public function getName() {}
  public function getVersion() {}
  public function getAuthor() {}
  public function getURL() {}
  public function getCopyright() {}
}
interface Reflector{
  static public function export() {}
  public function __toString() {}
}
