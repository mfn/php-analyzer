<?php
# Generated by mfn/php-reflection-gen 0.0.1
# PHP version 5.4.30, extension sqlite3 0.7
class SQLite3{
  public function open($filename, $flags, $encryption_key) {}
  public function close() {}
  public function exec($query) {}
  static public function version() {}
  public function lastInsertRowID() {}
  public function lastErrorCode() {}
  public function lastErrorMsg() {}
  public function busyTimeout($ms) {}
  public function loadExtension($shared_library) {}
  public function changes() {}
  static public function escapeString($value) {}
  public function prepare($query) {}
  public function query($query) {}
  public function querySingle($query, $entire_row) {}
  public function createFunction($name, $callback, $argument_count) {}
  public function createAggregate($name, $step_callback, $final_callback, $argument_count) {}
  public function createCollation($name, $callback) {}
  public function openBlob($table, $column, $rowid, $dbname) {}
  public function enableExceptions($enableExceptions) {}
  public function __construct($filename, $flags, $encryption_key) {}
}
class SQLite3Stmt{
  public function paramCount() {}
  public function close() {}
  public function reset() {}
  public function clear() {}
  public function execute() {}
  public function bindParam($param_number, &$param, $type) {}
  public function bindValue($param_number, $param, $type) {}
  public function readOnly() {}
  private function __construct($sqlite3) {}
}
class SQLite3Result{
  public function numColumns() {}
  public function columnName($column_number) {}
  public function columnType($column_number) {}
  public function fetchArray($mode) {}
  public function reset() {}
  public function finalize() {}
  private function __construct() {}
}
