<?php
# Generated by mfn/php-reflection-gen 0.0.1
# PHP version 5.4.30, extension session
function session_name($name) {}
function session_module_name($module) {}
function session_save_path($path) {}
function session_id($id) {}
function session_regenerate_id($delete_old_session) {}
function session_decode($data) {}
function session_encode() {}
function session_start() {}
function session_destroy() {}
function session_unset() {}
function session_set_save_handler($open, $close, $read, $write, $destroy, $gc) {}
function session_cache_limiter($cache_limiter) {}
function session_cache_expire($new_cache_expire) {}
function session_set_cookie_params($lifetime, $path, $domain, $secure, $httponly) {}
function session_get_cookie_params() {}
function session_write_close() {}
function session_status() {}
function session_register_shutdown() {}
function session_commit() {}
class SessionHandler implements SessionHandlerInterface{
  public function open($save_path, $session_name) {}
  public function close() {}
  public function read($key) {}
  public function write($key, $val) {}
  public function destroy($key) {}
  public function gc($maxlifetime) {}
}
interface SessionHandlerInterface{
  public function open($save_path, $session_name) {}
  public function close() {}
  public function read($key) {}
  public function write($key, $val) {}
  public function destroy($key) {}
  public function gc($maxlifetime) {}
}
